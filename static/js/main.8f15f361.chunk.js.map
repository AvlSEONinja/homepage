{"version":3,"sources":["components/SearchBar.tsx","components/BookmarkEditor.tsx","components/BookmarkEntry.tsx","components/BookmarkBar.tsx","components/TodoEntry.tsx","components/TodoBox.tsx","utils/Formater.ts","components/TrelloCard.tsx","components/TrelloSettings.tsx","components/TrelloIntegration.tsx","components/Clock.tsx","components/CalendarIntegration.tsx","components/SearchEngineSettings.tsx","components/BackgroundSettings.tsx","components/ProjectInfo.tsx","components/BackgroundInfo.tsx","App.tsx","serviceWorker.js","index.js"],"names":["SearchBar","this","props","engineType","length","name","action","engineUrl","split","icon","id","className","placeholder","autoComplete","type","src","alt","Component","BookmarkEditor","handleNameChange","e","setState","target","value","handleURLChange","url","handleIconChange","handleDelete","onClose","state","handleSave","trim","startsWith","onSave","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","faTimes","onChange","defaultValue","onClick","closeButtonText","BookmarkEntry","handleEdit","entry","onUpdate","onDelete","href","rel","data-toggle","data-target","faPen","BookmarkBar","editable","entries","Array","saveBookmarks","localStorage","setItem","JSON","stringify","handleEditToggle","handleBookmarkDelete","bookmark","a","filter","handleBookmarkUpdate","push","handleNewBookmark","Math","random","toString","substring","window","location","reload","getEntries","slice","bookmarks","map","key","Fragment","getItem","parse","faCheck","faPlus","TodoEntry","done","handleDone","onDoneToggle","faCheckCircle","faCircle","text","faTrash","TodoBox","saveTodoList","handleInputKey","keyCode","handleDoneToggle","todo","onKeyUp","withLeadingZeroes","number","size","str","TrelloCard","parseDate","dateString","date","Date","getFullYear","getMonth","getDate","card","shortUrl","faShareSquare","due","TrelloSettings","apiKey","listId","loadedApiKey","loginState","boards","lists","selectedBoard","boardsLoaded","handleKeyChange","componentDidMount","handleLogin","loadBoards","onReady","Trello","get","res","console","log","err","loadLists","handleBoardChange","handleListChange","getTrelloClient","clientVersion","apiEndpoint","authEndpoint","intentEndpoint","authorizeName","authorizeType","authorizePersist","authorizeInteractive","authorizeScopeRead","authorizeScopeWrite","authorizeScopeAccount","authorizeExpiration","authorizeOnSuccess","authorizeOnError","autoAuthorize","authorizeButton","buttonStyle","buttonColor","buttonText","board","list","TrelloIntegration","logged","cards","loadCards","trello","showTrelloInfo","faCog","onSettingsChange","Clock","timerId","setInterval","clearInterval","hour","pad","getHours","getMinutes","getSeconds","CalendarIntegration","locale","SearchEngineSettings","saveEngine","handleChange","handleUrlChange","config","json","BackgroundSettings","author","authorUrl","day","night","ProjectInfo","BackgroundInfo","backgroundAuthorUrl","backgroundAuthor","App","dayBackground","nightBackground","currentBackground","undefined","setBackground","now","document","getElementsByTagName","background","saveBackgrounds","handleTrelloSave","handleSearchEngineSave","handleBackgroundSave","loadTrelloIntegration","configEncoded","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f15f361.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/SearchBar.scss\";\n\ninterface SearchBarProps {\n  engineType: string;\n  engineUrl?: string;\n}\n\nclass SearchBar extends Component<SearchBarProps> {\n  render() {\n    if (this.props.engineType.length === 0) return null;\n\n    let name = \"\";\n    let action = \"\";\n\n    if (this.props.engineType === \"duckduckgo\") {\n      name = \"DuckDuckGO\";\n      action = \"https://duckduckgo.com\";\n    }\n\n    if (this.props.engineType === \"google\") {\n      name = \"Google\";\n      action = \"https://google.com/search\";\n    }\n\n    if (this.props.engineType === \"custom\") {\n      name = this.props.engineUrl!.split(\"//\")[1].split(\"/\")[0];\n      action = this.props.engineUrl!;\n    }\n\n    let icon = `https://external-content.duckduckgo.com/ip3/${\n      action.split(\"://\")[1].split(\"/\")[0]\n    }.ico`;\n\n    return (\n      <form action={action} id=\"search-bar-container\" className=\"homepage-card\">\n        <input name=\"q\" placeholder={`Search at ${name}`} autoComplete=\"off\" />\n        <button type=\"submit\">\n          <img src={icon} className=\"icon\" alt={`${name} icon`} />\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface BookmarkEditorProps {\n  id: string;\n  onSave: Function;\n  name: string;\n  url: string;\n  icon: string;\n  closeButtonText: string;\n  onClose: Function;\n}\n\ninterface BookmarkEditorState {\n  name: string;\n  url: string;\n  icon: string;\n}\n\nclass BookmarkEditor extends Component<\n  BookmarkEditorProps,\n  BookmarkEditorState\n> {\n  componentDidMount() {\n    this.setState({\n      name: this.props.name,\n      url: this.props.url,\n      icon: this.props.icon\n    });\n  }\n\n  handleNameChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ name: (e.target as any).value });\n  };\n\n  handleURLChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ url: (e.target as any).value });\n  };\n\n  handleIconChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ icon: (e.target as any).value });\n  };\n\n  handleDelete = () => {\n    this.props.onClose({ name: this.state.name, icon: this.state.icon });\n  };\n\n  handleSave = () => {\n    if (\n      this.state.name.trim().length === 0 ||\n      this.state.url.trim().length === 0\n    ) {\n      return;\n    }\n\n    let url = this.state.url;\n    if (!url.startsWith(\"http\")) {\n      url = \"https://\" + url;\n    }\n\n    this.props.onSave({ url, name: this.state.name, icon: this.state.icon });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id={this.props.id}\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"bookmark-editor-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"bookmark-editor-modal-label\">\n                Bookmark editor\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"bookmark-settings-entry\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark name\"\n                  className=\"bookmark-entry-name\"\n                  onChange={this.handleNameChange}\n                  defaultValue={this.props.name}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark URL\"\n                  className=\"bookmark-entry-url\"\n                  onChange={this.handleURLChange}\n                  defaultValue={this.props.url}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark icon (leave empty to use the site favicon)\"\n                  className=\"bookmark-entry-icon\"\n                  onChange={this.handleIconChange}\n                  defaultValue={this.props.icon}\n                />\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n                onClick={this.handleDelete}\n              >\n                {this.props.closeButtonText}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookmarkEditor;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport BookmarkEditor from \"./BookmarkEditor\";\n\ninterface BookmarkEntryProps {\n  id: string;\n  onUpdate: Function;\n  onDelete: Function;\n  url: string;\n  icon: string;\n  name: string;\n}\n\nclass BookmarkEntry extends Component<BookmarkEntryProps> {\n  handleEdit = () => {};\n\n  handleSave = (entry: any) => {\n    entry.id = this.props.id;\n    this.props.onUpdate(entry);\n  };\n\n  handleDelete = (entry: any) => {\n    entry.id = this.props.id;\n    this.props.onDelete(entry);\n  };\n\n  render() {\n    let icon = this.props.icon;\n\n    if (icon === \"\") {\n      icon = `https://external-content.duckduckgo.com/ip3/${\n        this.props.url.split(\"://\")[1].split(\"/\")[0]\n      }.ico`;\n    }\n\n    return (\n      <div className=\"bookmark-entry\">\n        <a href={this.props.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={icon} alt={`${this.props.name} icon`} />\n        </a>\n        <div\n          className=\"bookmark-edit\"\n          data-toggle=\"modal\"\n          data-target={`#bookmark-edit-modal-${this.props.id}`}\n        >\n          <FontAwesomeIcon icon={faPen} />\n        </div>\n        <BookmarkEditor\n          id={`bookmark-edit-modal-${this.props.id}`}\n          name={this.props.name}\n          url={this.props.url}\n          icon={this.props.icon}\n          closeButtonText=\"Delete\"\n          onSave={this.handleSave}\n          onClose={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BookmarkEntry;\n","import React, { Component } from \"react\";\nimport \"../styles/BookmarkBar.scss\";\nimport BookmarkEntry from \"./BookmarkEntry\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faPen, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport BookmarkEditor from \"./BookmarkEditor\";\n\ninterface BookmarkBarState {\n  editable: boolean;\n  entries: Array<any>;\n}\n\nclass BookmarkBar extends Component<any, BookmarkBarState> {\n  state = { editable: false, entries: new Array<any>() };\n\n  saveBookmarks = () => {\n    localStorage.setItem(\"bookmarks\", JSON.stringify(this.state.entries));\n  };\n\n  componentDidMount() {\n    const bookmarks = localStorage.getItem(\"bookmarks\");\n    if (bookmarks !== null) {\n      const entries = JSON.parse(bookmarks);\n      this.setState({ entries });\n    } else {\n      this.saveBookmarks();\n    }\n  }\n\n  handleEditToggle = () => {\n    this.setState({ editable: !this.state.editable });\n  };\n\n  handleBookmarkDelete = async (bookmark: any) => {\n    let entries = this.state.entries;\n    entries = entries.filter(entry => entry.id !== bookmark.id);\n    await this.setState({ entries });\n    this.saveBookmarks();\n  };\n\n  handleBookmarkUpdate = async (bookmark: any) => {\n    let entries = this.state.entries;\n    entries = entries.filter(entry => entry.id !== bookmark.id);\n    entries.push(bookmark);\n    await this.setState({ entries });\n    this.saveBookmarks();\n  };\n\n  handleNewBookmark = (entry: any) => {\n    let id = \"\";\n    do {\n      id =\n        Math.random()\n          .toString(36)\n          .substring(2, 12) +\n        Math.random()\n          .toString(36)\n          .substring(2, 12) +\n        Math.random()\n          .toString(36)\n          .substring(2, 12) +\n        Math.random()\n          .toString(36)\n          .substring(2, 12);\n    } while (\n      // eslint-disable-next-line\n      this.state.entries.filter(entry => entry.id === id).length !== 0\n    );\n    entry.id = id;\n\n    const entries = this.state.entries;\n    entries.push(entry);\n    this.setState({ entries });\n    this.saveBookmarks();\n    window.location.reload();\n  };\n\n  getEntries = () => {\n    let entries = this.state.entries;\n\n    if (entries.length > 14) {\n      entries = entries.slice(0, 15);\n    }\n\n    const bookmarks = entries.map(bookmark => (\n      <BookmarkEntry\n        key={bookmark.id}\n        id={bookmark.id}\n        name={bookmark.name}\n        url={bookmark.url}\n        icon={bookmark.icon}\n        onUpdate={this.handleBookmarkUpdate}\n        onDelete={this.handleBookmarkDelete}\n      />\n    ));\n    if (entries.length > 14) {\n      return (\n        <React.Fragment>\n          {bookmarks}\n          <h4>...</h4>\n        </React.Fragment>\n      );\n    } else {\n      return bookmarks;\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"bookmark-bar\" className=\"homepage-card\">\n        <div\n          className={`bookmark-list ${this.state.editable ? \"editable\" : \"\"}`}\n        >\n          {this.getEntries()}\n        </div>\n        <div className=\"homepage-card-header\">\n          <div\n            id=\"bookmark-edit-toggle\"\n            className=\"homepage-card-settings-holder\"\n            onClick={this.handleEditToggle}\n          >\n            <FontAwesomeIcon\n              icon={this.state.editable ? faCheck : faPen}\n              className=\"homepage-card-settings\"\n            />\n          </div>\n          <div\n            className=\"homepage-card-settings-holder\"\n            data-toggle=\"modal\"\n            data-target=\"#bookmark-add-modal\"\n          >\n            <FontAwesomeIcon icon={faPlus} className=\"homepage-card-settings\" />\n          </div>\n        </div>\n        <BookmarkEditor\n          id=\"bookmark-add-modal\"\n          name=\"\"\n          url=\"\"\n          icon=\"\"\n          closeButtonText=\"Close\"\n          onSave={this.handleNewBookmark}\n          onClose={() => {}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BookmarkBar;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle, faCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface TodoEntryProps {\n  id: string;\n  text: string;\n  done: boolean;\n  onDelete: Function;\n  onDoneToggle: Function;\n}\n\ninterface TodoEntryState {\n  done: boolean;\n}\n\nclass TodoEntry extends Component<TodoEntryProps, TodoEntryState> {\n  state = { done: false };\n\n  componentDidMount() {\n    this.setState({ done: this.props.done });\n  }\n\n  handleDone = async () => {\n    await this.setState({ done: !this.state.done });\n\n    this.props.onDoneToggle(this.props.id, this.state.done);\n  };\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.id);\n  };\n\n  render() {\n    return (\n      <div className=\"todo-entry\">\n        <div className=\"todo-entry-holder\">\n          <div className=\"todo-checkbox\" onClick={this.handleDone}>\n            <FontAwesomeIcon\n              icon={this.state.done ? faCheckCircle : faCircle}\n            />\n          </div>\n          <div className={this.state.done ? \"checked\" : \"\"}>\n            {this.props.text}\n          </div>\n        </div>\n        <div className=\"todo-entry-actions\">\n          <div className=\"todo-entry-action\" onClick={this.handleDelete}>\n            <FontAwesomeIcon icon={faTrash} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoEntry;\n","import React, { Component } from \"react\";\nimport TodoEntry from \"./TodoEntry\";\nimport \"../styles/TodoBox.scss\";\n\ninterface TodoEntryState {\n  text: string;\n  done: boolean;\n  id: string;\n}\n\ninterface TodoBoxState {\n  entries: Array<TodoEntryState>;\n}\n\nclass TodoBox extends Component<any, TodoBoxState> {\n  state = { entries: new Array<TodoEntryState>() };\n\n  saveTodoList = () => {\n    localStorage.setItem(\"todo-list\", JSON.stringify(this.state.entries));\n  };\n\n  componentDidMount() {\n    const todo = localStorage.getItem(\"todo-list\");\n    if (todo !== null) {\n      const entries = JSON.parse(todo);\n      this.setState({ entries });\n    } else {\n      this.saveTodoList();\n    }\n  }\n\n  handleInputKey = (e: React.KeyboardEvent<HTMLElement>) => {\n    if (e.keyCode === 13) {\n      const value = (e.target as any).value as string;\n\n      if (value.trim().length === 0) {\n        return;\n      }\n\n      let id = \"\";\n\n      do {\n        id =\n          Math.random()\n            .toString(36)\n            .substring(2, 12) +\n          Math.random()\n            .toString(36)\n            .substring(2, 12) +\n          Math.random()\n            .toString(36)\n            .substring(2, 12) +\n          Math.random()\n            .toString(36)\n            .substring(2, 12);\n      } while (\n        // eslint-disable-next-line\n        this.state.entries.filter(entry => entry.id === id).length !== 0\n      );\n\n      const entries = this.state.entries;\n      entries.push({ text: value, done: false, id });\n      this.setState({ entries });\n      this.saveTodoList();\n      (e.target as any).value = \"\";\n    }\n  };\n\n  handleDelete = async (id: string) => {\n    let entries = this.state.entries;\n    entries = entries.filter(value => value.id !== id);\n    await this.setState({ entries });\n    this.saveTodoList();\n  };\n\n  handleDoneToggle = async (id: string, done: boolean) => {\n    let entries = this.state.entries;\n    entries = entries.map(value => {\n      if (value.id === id) value.done = done;\n\n      return value;\n    });\n    await this.setState({ entries });\n    this.saveTodoList();\n  };\n\n  render() {\n    return (\n      <div id=\"todo-box\" className=\"homepage-card\">\n        <h4>TODO:</h4>\n        <input\n          id=\"todo-new-entry\"\n          className=\"\"\n          type=\"text\"\n          placeholder=\"Add new things to your TODO\"\n          autoComplete=\"off\"\n          onKeyUp={this.handleInputKey}\n        />\n        <div>\n          {this.state.entries.map(entry => (\n            <TodoEntry\n              onDelete={this.handleDelete}\n              onDoneToggle={this.handleDoneToggle}\n              text={entry.text}\n              done={entry.done}\n              id={entry.id}\n              key={entry.id}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoBox;\n","export function withLeadingZeroes(number: number, size: number): string {\n  let str = number.toString();\n\n  while (str.length < size) {\n    str = \"0\" + str;\n  }\n  return str;\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShareSquare } from \"@fortawesome/free-regular-svg-icons\";\nimport { withLeadingZeroes } from \"../utils/Formater\";\n\ninterface TrelloCardProps {\n  card: any;\n}\n\nclass TrelloCard extends Component<TrelloCardProps> {\n  parseDate = (dateString: string) => {\n    const date = new Date(Date.parse(dateString));\n    return `${date.getFullYear()}/${withLeadingZeroes(\n      date.getMonth() + 1,\n      2\n    )}/${withLeadingZeroes(date.getDate(), 2)}`;\n  };\n\n  render() {\n    const { card } = this.props;\n    return (\n      <div className=\"trello-card\">\n        <div className=\"trello-card-content\">\n          <div className=\"trello-card-name\">{card.name}</div>\n          <div className=\"trello-card-actions\">\n            <a\n              target=\"blank\"\n              href={this.props.card.shortUrl}\n              className=\"trello-card-action-anchor\"\n            >\n              <div className=\"trello-card-action\">\n                <FontAwesomeIcon icon={faShareSquare} />\n              </div>\n            </a>\n          </div>\n        </div>\n        {card.due === null ? (\n          \"\"\n        ) : (\n          <div className=\"trello-card-due\">{this.parseDate(card.due)}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default TrelloCard;\n","import React, { Component } from \"react\";\nimport \"../styles/TrelloSettings.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TrelloClient, { Trello } from \"react-trello-client\";\n\ninterface TrelloSettingsProps {\n  apiKey: string;\n  listId: string;\n  onSave: Function;\n  onReady: Function;\n}\n\ninterface TrelloSettingsState {\n  apiKey: string;\n  listId: string;\n  loadedApiKey: string;\n  boards: Array<any>;\n  lists: Array<any>;\n  selectedBoard: string;\n  boardsLoaded: boolean;\n  /*\n  -2 = No Key\n  -1 = Key ok, no Token\n  0 = Nothing yet\n  1 = Key and Token OK, nedding Client Start\n  2 = Key, Token and Client OK\n  */\n  loginState: number;\n}\n\nclass TrelloSettings extends Component<\n  TrelloSettingsProps,\n  TrelloSettingsState\n> {\n  state = {\n    apiKey: \"\",\n    listId: \"\",\n    loadedApiKey: \"\",\n    loginState: 0,\n    boards: new Array<any>(),\n    lists: new Array<any>(),\n    selectedBoard: \"\",\n    boardsLoaded: false\n  };\n\n  handleSave = () => {\n    let loginState = 0;\n\n    if (this.state.apiKey.trim().length === 0) {\n      loginState = -2;\n    } else {\n      if (localStorage.getItem(\"trello_token\") === null) {\n        loginState = -1;\n      } else {\n        loginState = 1;\n      }\n    }\n\n    this.setState({ loadedApiKey: this.state.apiKey, loginState });\n    this.props.onSave(this.state.apiKey, this.state.listId);\n  };\n\n  handleKeyChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ apiKey: (e.target as any).value });\n  };\n\n  componentDidMount = async () => {\n    let loginState = 0;\n\n    if (this.props.apiKey.trim().length === 0) {\n      loginState = -2;\n    } else {\n      if (localStorage.getItem(\"trello_token\") === null) {\n        loginState = -1;\n      } else {\n        loginState = 1;\n      }\n    }\n\n    await this.setState({\n      loginState,\n      apiKey: this.props.apiKey,\n      listId: this.props.listId,\n      loadedApiKey: this.props.apiKey\n    });\n  };\n\n  handleLogin = () => {\n    if (!this.state.boardsLoaded) {\n      this.loadBoards();\n    }\n    this.props.onReady(Trello);\n  };\n\n  loadBoards = async () => {\n    Trello.get(\n      \"members/me/boards\",\n      (res: any) => {\n        console.log(\"get boards\");\n        this.setState({ boardsLoaded: true, boards: res });\n      },\n      (err: any) => {\n        console.log(err);\n      }\n    );\n  };\n\n  loadLists = async () => {\n    Trello.get(\n      `boards/${this.state.selectedBoard}/lists`,\n      (res: any) => {\n        console.log(\"get lists\");\n        this.setState({ lists: res });\n      },\n      (err: any) => {\n        console.log(err);\n      }\n    );\n  };\n\n  handleBoardChange = async (e: React.ChangeEvent<any>) => {\n    await this.setState({ selectedBoard: e.target.value });\n    this.loadLists();\n  };\n\n  handleListChange = async (e: React.ChangeEvent<any>) => {\n    this.setState({ listId: e.target.value });\n  };\n\n  getTrelloClient = () => {\n    if (this.state.loginState === -2 || this.state.loginState === 0)\n      return null;\n    return (\n      <TrelloClient\n        apiKey={this.state.loadedApiKey} // Get the API key from https://trello.com/app-key/\n        clientVersion={1} // number: {1}, {2}, {3}\n        apiEndpoint=\"https://api.trello.com\" // string: \"https://api.trello.com\"\n        authEndpoint=\"https://trello.com\" // string: \"https://trello.com\"\n        intentEndpoint=\"https://trello.com\" // string: \"https://trello.com\"\n        authorizeName=\"Homepage\" // string: \"React Trello Client\"\n        authorizeType=\"popup\" // string: popup | redirect\n        authorizePersist={true}\n        authorizeInteractive={true}\n        authorizeScopeRead={true} // boolean: {true} | {false}\n        authorizeScopeWrite={true} // boolean: {true} | {false}\n        authorizeScopeAccount={true} // boolean: {true} | {false}\n        authorizeExpiration=\"never\" // string: \"1hour\", \"1day\", \"30days\" | \"never\"\n        authorizeOnSuccess={this.handleLogin} // function: {() => console.log('Login successful!')}\n        authorizeOnError={() => console.log(\"Login error!\")} // function: {() => console.log('Login error!')}\n        autoAuthorize={true} // boolean: {true} | {false}\n        authorizeButton={true} // boolean: {true} | {false}\n        buttonStyle=\"metamorph\" // string: \"metamorph\" | \"flat\"\n        buttonColor=\"green\" // string: \"green\" | \"grayish-blue\" | \"light\"\n        buttonText=\"Login with Trello\" // string: \"Login with Trello\"\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"trello-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"trello-setings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"trello-settings-modal-label\">\n                Trello settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <label>\n                Get a API key in{\" \"}\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://trello.com/app-key\"\n                >\n                  https://trello.com/app-key\n                </a>\n              </label>\n              <input\n                defaultValue={this.state.apiKey}\n                onChange={this.handleKeyChange}\n                placeholder=\"API key (insert a value and save before login)\"\n              />\n              <div\n                id=\"trello-login-container\"\n                className={this.state.loginState !== -1 ? \"hidden\" : \"\"}\n              >\n                {this.getTrelloClient()}\n              </div>\n              <div\n                id=\"board-selector-holder\"\n                className={\n                  this.state.loginState === 1 || this.state.loginState === -1\n                    ? \"\"\n                    : \"hidden\"\n                }\n              >\n                <label>Board:</label>\n                <select\n                  id=\"title\"\n                  name=\"title\"\n                  defaultValue=\"\"\n                  onChange={this.handleBoardChange}\n                >\n                  <option value=\"\">--</option>\n                  {this.state.boards.map((board: any) => (\n                    <option key={board.id} value={board.id}>\n                      {board.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div\n                id=\"list-selector-holder\"\n                className={this.state.selectedBoard !== \"\" ? \"\" : \"hidden\"}\n              >\n                <label>List:</label>\n                <select\n                  id=\"title\"\n                  name=\"title\"\n                  defaultValue=\"\"\n                  onChange={this.handleListChange}\n                >\n                  <option value=\"\">--</option>\n                  {this.state.lists.map((list: any) => (\n                    <option key={list.id} value={list.id}>\n                      {list.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n                onClick={() => window.location.reload()}\n              >\n                Close\n              </button>\n              <button\n                onClick={this.handleSave}\n                type=\"button\"\n                className=\"btn btn-primary\"\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TrelloSettings;\n","import React, { Component } from \"react\";\nimport \"../styles/TrelloIntegration.scss\";\nimport TrelloCard from \"./TrelloCard\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TrelloSettings from \"./TrelloSettings\";\n\ninterface TrelloIntegrationProps {\n  apiKey: string;\n  listId: string;\n  onSettingsChange: Function;\n}\n\ninterface TrelloIntegrationState {\n  logged: boolean;\n  cards: Array<any>;\n}\n\nclass TrelloIntegration extends Component<\n  TrelloIntegrationProps,\n  TrelloIntegrationState\n> {\n  state = { logged: false, cards: new Array<any>() };\n\n  loadCards = (trello: any) => {\n    if (this.state.logged) return;\n    trello.get(\n      `lists/${this.props.listId}/cards`,\n      (res: any) => {\n        console.log(\"get cards\");\n        const cards = res;\n        this.setState({ logged: true, cards });\n      },\n      (err: any) => {\n        console.log(\"ERROR:\", err);\n      }\n    );\n  };\n\n  showTrelloInfo = () => {\n    if (\n      this.props.apiKey.trim().length === 0 ||\n      this.props.listId.trim().length === 0\n    )\n      return <h6>Setup Trello config to start using</h6>;\n\n    return (\n      <div id=\"trello-cards-container\">\n        {this.state.cards.map(card => (\n          <TrelloCard key={card.id} card={card} />\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div id=\"homepage-trello\" className=\"homepage-card\">\n        <div className=\"homepage-card-header\">\n          <h4>Trello:</h4>\n          <div\n            className=\"homepage-card-settings-holder\"\n            data-toggle=\"modal\"\n            data-target=\"#trello-settings-modal\"\n          >\n            <FontAwesomeIcon icon={faCog} className=\"homepage-card-settings\" />\n          </div>\n        </div>\n        <TrelloSettings\n          apiKey={this.props.apiKey}\n          listId={this.props.listId}\n          onSave={this.props.onSettingsChange}\n          onReady={this.loadCards}\n        />\n        {this.showTrelloInfo()}\n      </div>\n    );\n  }\n}\n\nexport default TrelloIntegration;\n","import React, { Component } from \"react\";\nimport { withLeadingZeroes as pad } from \"../utils/Formater\";\n\ninterface ClockState {\n  date: Date;\n}\n\nclass Clock extends Component<any, ClockState> {\n  state = { date: new Date() };\n\n  timerId?: any;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => this.setState({ date: new Date() }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const hour = `${pad(date.getHours(), 2)}:${pad(date.getMinutes(), 2)}:${pad(\n      date.getSeconds(),\n      2\n    )}`;\n    return <h3 id=\"calendar-clock\">{hour}</h3>;\n  }\n}\n\nexport default Clock;\n","import React, { Component } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"../styles/CalendarIntegration.scss\";\nimport Clock from \"./Clock\";\n\nclass CalendarIntegration extends Component {\n  render() {\n    return (\n      <div id=\"calendar-container\" className=\"homepage-card\">\n        <h4>Calendar:</h4>\n        <Clock />\n        <Calendar\n          locale=\"en-US\"\n          value={new Date()}\n          className=\"homepage-calendar\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default CalendarIntegration;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../styles/SearchEngineSettings.scss\";\n\ninterface SearchEngineSettingsProps {\n  onSave: Function;\n}\n\ninterface SearchEngineSettingsState {\n  engineType: string;\n  engineUrl?: string;\n}\n\nclass SearchEngineSettings extends Component<\n  SearchEngineSettingsProps,\n  SearchEngineSettingsState\n> {\n  state = { engineType: \"\", engineUrl: \"\" };\n\n  saveEngine = () => {\n    localStorage.setItem(\"search-engine\", JSON.stringify(this.state));\n  };\n\n  async componentDidMount() {\n    const config = localStorage.getItem(\"search-engine\");\n    if (config === null) {\n      await this.setState({ engineType: \"duckduckgo\" });\n      this.saveEngine();\n    } else {\n      const json = JSON.parse(config);\n      await this.setState({\n        engineType: json.engineType,\n        engineUrl: json.engineUrl\n      });\n    }\n    this.props.onSave(this.state);\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ engineType: (e.target as any).value! });\n  };\n\n  handleUrlChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ engineUrl: (e.target as any).value! });\n  };\n\n  handleSave = async () => {\n    if (\n      !this.state.engineUrl.startsWith(\"https://\") &&\n      !this.state.engineUrl.startsWith(\"http://\")\n    ) {\n      await this.setState({ engineUrl: `https://${this.state.engineUrl}` });\n    }\n    await this.saveEngine();\n    this.props.onSave(this.state);\n  };\n\n  render() {\n    if (this.state.engineType.length === 0) return null;\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"homepage-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"homepage-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"homepage-settings-modal-label\">\n                General settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div>\n                <label>Search engine</label>\n                <select\n                  id=\"search-engine\"\n                  onChange={this.handleChange}\n                  defaultValue={this.state.engineType}\n                >\n                  <option value=\"duckduckgo\">DuckDuckGO</option>\n                  <option value=\"google\">Google</option>\n                  <option value=\"custom\">Custom</option>\n                </select>\n                <input\n                  placeholder=\"Insert custom search engine URL\"\n                  defaultValue={this.state.engineUrl}\n                  onChange={this.handleUrlChange}\n                  className={`${\n                    this.state.engineType === \"custom\" ? \"\" : \"hidden\"\n                  }`}\n                />\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchEngineSettings;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface BackgroundSettingsProps {\n  onSave: Function;\n  day: any;\n  night: any;\n}\n\nclass BackgroundSettings extends Component<BackgroundSettingsProps> {\n  state = {\n    \"day-url\": \"\",\n    \"day-author\": \"\",\n    \"day-authorUrl\": \"\",\n    \"night-url\": \"\",\n    \"night-author\": \"\",\n    \"night-authorUrl\": \"\"\n  };\n\n  handleChange = (e: React.ChangeEvent<HTMLElement>) => {\n    const name = (e.target as any).name;\n    const value = (e.target as any).value;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSave = () => {\n    this.props.onSave(\n      {\n        url: this.state[\"day-url\"],\n        author: this.state[\"day-author\"],\n        authorUrl: this.state[\"day-authorUrl\"]\n      },\n      {\n        url: this.state[\"night-url\"],\n        author: this.state[\"night-author\"],\n        authorUrl: this.state[\"night-authorUrl\"]\n      }\n    );\n  };\n\n  componentDidMount() {\n    this.setState({\n      \"day-url\": this.props.day.url,\n      \"day-author\": this.props.day.author,\n      \"day-authorUrl\": this.props.day.authorUrl,\n      \"night-url\": this.props.night.url,\n      \"night-author\": this.props.night.author,\n      \"night-authorUrl\": this.props.night.authorUrl\n    });\n  }\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"background-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"background-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"background-settings-modal-label\">\n                Background settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <label>Day background</label>\n              <input\n                name=\"day-url\"\n                placeholder=\"Image URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"day-url\"]}\n              />\n              <input\n                name=\"day-author\"\n                placeholder=\"Author name\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"day-author\"]}\n              />\n              <input\n                name=\"day-authorUrl\"\n                placeholder=\"Author page URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"day-authorUrl\"]}\n              />\n              <label>Night background</label>\n              <input\n                name=\"night-url\"\n                placeholder=\"Image URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"night-url\"]}\n              />\n              <input\n                name=\"night-author\"\n                placeholder=\"Author name\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"night-author\"]}\n              />\n              <input\n                name=\"night-authorUrl\"\n                placeholder=\"Author page URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"night-authorUrl\"]}\n              />\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BackgroundSettings;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\n\nclass ProjectInfo extends Component {\n  render() {\n    return (\n      <div className=\"footer-info\">\n        <div\n          className=\"homepage-card-settings-holder\"\n          data-toggle=\"modal\"\n          data-target=\"#homepage-settings-modal\"\n        >\n          <FontAwesomeIcon icon={faCog} className=\"homepage-card-settings\" />\n        </div>\n        Homepage made by{\" \"}\n        <a\n          href=\"https://github.com/Pauloo27/homepage\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Pauloo27\n        </a>{\" \"}\n        under GPL-2 license\n      </div>\n    );\n  }\n}\n\nexport default ProjectInfo;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface BackgroundInfoProps {\n  backgroundAuthor: string;\n  backgroundAuthorUrl: string;\n}\n\nclass BackgroundInfo extends Component<BackgroundInfoProps> {\n  render() {\n    return (\n      <div id=\"background-info\" className=\"footer-info\">\n        <div\n          className=\"homepage-card-settings-holder\"\n          data-toggle=\"modal\"\n          data-target=\"#background-settings-modal\"\n        >\n          <FontAwesomeIcon icon={faCog} className=\"homepage-card-settings\" />\n        </div>\n        Image by{\" \"}\n        <a\n          href={this.props.backgroundAuthorUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {this.props.backgroundAuthor}\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default BackgroundInfo;\n","import React, { Component } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport BookmarkBar from \"./components/BookmarkBar\";\nimport \"./styles/App.scss\";\nimport TodoBox from \"./components/TodoBox\";\nimport TrelloIntegration from \"./components/TrelloIntegration\";\nimport CalendarIntegration from \"./components/CalendarIntegration\";\nimport SearchEngineSettings from \"./components/SearchEngineSettings\";\nimport BackgroundSettings from \"./components/BackgroundSettings\";\nimport ProjectInfo from \"./components/ProjectInfo\";\nimport BackgroundInfo from \"./components/BackgroundInfo\";\n\ninterface Background {\n  url: string;\n  author: string;\n  authorUrl: string;\n}\n\ninterface AppState {\n  dayBackground: Background;\n  nightBackground: Background;\n  currentBackground: Background;\n  engineType: string;\n  engineUrl?: string;\n}\n\nclass App extends Component<any, AppState> {\n  state = {\n    dayBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    nightBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    currentBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    engineType: \"\",\n    engineUrl: undefined\n  };\n\n  setBackground = () => {\n    const now = new Date();\n    let currentBackground: Background;\n    if (now.getHours() >= 6 && now.getHours() < 18) {\n      currentBackground = this.state.dayBackground;\n    } else {\n      currentBackground = this.state.nightBackground;\n    }\n\n    this.setState({ currentBackground });\n    document.getElementsByTagName(\"body\")[0].background = currentBackground.url;\n  };\n\n  saveBackgrounds = () => {\n    localStorage.setItem(\n      \"backgrounds\",\n      JSON.stringify({\n        dayBackground: this.state.dayBackground,\n        nightBackground: this.state.nightBackground\n      })\n    );\n  };\n\n  async componentDidMount() {\n    const value = localStorage.getItem(\"backgrounds\");\n    if (value === null) {\n      await this.setState({\n        dayBackground: {\n          url: \"https://images.unsplash.com/photo-1518012961-5efdfd47ba75\",\n          author: \"Alex Knight\",\n          authorUrl: \"https://unsplash.com/@agkdesign\"\n        },\n        nightBackground: {\n          url: \"https://images.unsplash.com/Ys-DBJeX0nE.JPG\",\n          author: \"Alex Knight\",\n          authorUrl: \"https://unsplash.com/@agkdesign\"\n        }\n      });\n\n      this.saveBackgrounds();\n    } else {\n      await this.setState(JSON.parse(value));\n    }\n\n    this.setBackground();\n  }\n\n  handleTrelloSave = (apiKey?: string, listId?: string) => {\n    localStorage.setItem(\"trello-config\", JSON.stringify({ apiKey, listId }));\n  };\n\n  handleSearchEngineSave = (config: any) => {\n    this.setState(config);\n  };\n\n  handleBackgroundSave = async (\n    dayBackground: Background,\n    nightBackground: Background\n  ) => {\n    await this.setState({ dayBackground, nightBackground });\n    await this.saveBackgrounds();\n    this.setBackground();\n  };\n\n  loadTrelloIntegration = () => {\n    const configEncoded = localStorage.getItem(\"trello-config\");\n    if (configEncoded === null) {\n      return (\n        <TrelloIntegration\n          apiKey={\"\"}\n          listId={\"\"}\n          onSettingsChange={this.handleTrelloSave}\n        />\n      );\n    } else {\n      const config = JSON.parse(configEncoded);\n      return (\n        <TrelloIntegration\n          apiKey={config.apiKey}\n          listId={config.listId}\n          onSettingsChange={this.handleTrelloSave}\n        />\n      );\n    }\n  };\n\n  render() {\n    if (this.state.currentBackground.url === \"\") return null;\n    return (\n      <React.Fragment>\n        <div id=\"header-container\">\n          <SearchBar\n            engineType={this.state.engineType}\n            engineUrl={this.state.engineUrl}\n          />\n          <BookmarkBar />\n        </div>\n        <div id=\"middle-container\">\n          <TodoBox />\n          <CalendarIntegration />\n          {this.loadTrelloIntegration()}\n        </div>\n        <div id=\"footer-container\">\n          <ProjectInfo />\n          <BackgroundInfo\n            backgroundAuthor={this.state.currentBackground.author}\n            backgroundAuthorUrl={this.state.currentBackground.authorUrl}\n          />\n        </div>\n        <SearchEngineSettings onSave={this.handleSearchEngineSave} />\n        <BackgroundSettings\n          day={this.state.dayBackground}\n          night={this.state.nightBackground}\n          onSave={this.handleBackgroundSave}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"./styles/Global.scss\";\nimport App from \"./App.tsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}